version: '3'

networks:
    omninetwork:
        driver: 'bridge'

services:

## PHP
    php:
        build:
            context: ./php
            args:
                - UBUNTU_VERSION=${UBUNTU_VERSION}
                - TZ=${WORKSPACE_TIMEZONE}
                - PHP_PORT=${PHP_PORT}
        volumes:
            - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
        ports:
            - "${PHP_PORT}:${PHP_PORT}"
        networks:
            - omninetwork
        container_name: php

## Python
    python:
        build:
            context: ./python
            args:
                - UBUNTU_VERSION=${UBUNTU_VERSION}
                - TZ=${WORKSPACE_TIMEZONE}
                - PYTHON_PORT=${PYTHON_PORT}
        volumes:
            - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
        ports:
            - "${PYTHON_PORT}:${PYTHON_PORT}"
        container_name: python

## MySQL Database
    mysql:
        image: mysql:${MYSQL_VERSION}
        environment:
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
            - TZ=${WORKSPACE_TIMEZONE}
        volumes:
            - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
        ports:
            - "${MYSQL_PORT}:3306"
        networks:
            - omninetwork
        container_name: mysql

    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        environment:
            - PMA_ARBITRARY=${PMA_ARBITRARY}
            - PMA_HOST=${PMA_HOST}
            - PMA_PORT=${MYSQL_PORT}
            - PMA_USER=root
            - PMA_PASSWORD=secret
        volumes:
            - /sessions
        ports:
            - "${PMA_PORT}:80"
        networks:
            - omninetwork
        container_name: phpmyadmin

## PostgreSQL Database
    postgres:
        image: postgres:${POSTGRES_VERSION}
        volumes:
            - ${DATA_PATH_HOST}/postgres:/var/lib/postgresql/data
        ports:
            - "${POSTGRES_PORT}:5432"
        environment:
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        networks:
            - omninetwork
        container_name: postgres

## Mongo Database
    mongo:
        image: mongo:${MONGODB_VERSION}
        ports:
            - "${MONGODB_PORT}:27017"
        volumes:
            - ${DATA_PATH_HOST}/mongo:/data/db
        networks:
            - omninetwork
        container_name: mongo

    mongoclient:
        image: mongoclient/mongoclient:2.2.0
        ports:
            - "${MONGOCLIENT_PORT}:3000"
        environment:
            - MONGO_URL=${MONGO_URL}
            - INSTALL_MONGO=${INSTALL_MONGO}
        networks:
            - omninetwork
        container_name: mongoclient

## Redis
    redis:
        image: redis:${REDIS_VERSION}
        volumes:
            - ${DATA_PATH_HOST}/redis:/data
        ports:
            - "${REDIS_PORT}:6379"
        networks:
            - omninetwork
        container_name: redis
